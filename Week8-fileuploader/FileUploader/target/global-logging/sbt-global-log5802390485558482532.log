[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\aldie\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\aldie\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.1 (Oracle Corporation Java 13.0.2)
[debug]       Load.loadUnit: plugins took 274.4745ms
[debug]       Load.loadUnit: defsScala took 0.3539ms
[debug] [Loading] Scanning directory C:\Users\aldie\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.2504 ms
[debug]           Load.resolveProject(global-plugins) took 58.4878ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\aldie\.sbt\1.0\plugins, plugins: List(<none>))) took 118.1385ms
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 156.1625ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3391ms
[debug]     Load.loadUnit(file:/C:/Users/aldie/.sbt/1.0/plugins/, ...) took 443.8892ms
[debug]   Load.apply: load took 728.8241ms
[debug]   Load.apply: resolveProjects took 17.4408ms
[debug]   Load.apply: finalTransforms took 223.5225ms
[debug]   Load.apply: config.delegates took 9.0795ms
[debug]   Load.apply: Def.make(settings)... took 3567.1325ms
[debug]   Load.apply: structureIndex took 249.1299ms
[debug]   Load.apply: mkStreams took 4.9023ms
[info] loading global plugins from C:\Users\aldie\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7841.7296ms
[debug]           Load.loadUnit: plugins took 44.4102ms
[debug]           Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\aldie\Desktop\FileUploader\project
[debug]             Load.loadUnit: mkEval took 14.2198ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Desktop\FileUploader\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2071 ms
[info] loading settings for project fileuploader-build from idea.sbt ...
[debug]               Load.resolveProject(fileuploader-build) took 4.246ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fileuploader-build, base: C:\Users\aldie\Desktop\FileUploader\project, plugins: List(<none>))) took 10.1771ms
[debug] [Loading] Done in C:\Users\aldie\Desktop\FileUploader\project, returning: (fileuploader-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7855.9619ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.885ms
[debug]         Load.loadUnit(file:/C:/Users/aldie/Desktop/FileUploader/project/, ...) took 7918.6978ms
[debug]       Load.apply: load took 7920.753ms
[debug]       Load.apply: resolveProjects took 0.1333ms
[debug]       Load.apply: finalTransforms took 20.3341ms
[debug]       Load.apply: config.delegates took 0.4186ms
[debug]       Load.apply: Def.make(settings)... took 145.9981ms
[debug]       Load.apply: structureIndex took 31.1185ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from C:\Users\aldie\Desktop\FileUploader\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 14025.3489ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\aldie\Desktop\FileUploader
[debug]       Load.loadUnit: mkEval took 1.7888ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Desktop\FileUploader, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0319 ms
[info] loading settings for project fileuploader from build.sbt ...
[debug]         Load.resolveProject(fileuploader) took 194.8934ms
[debug]       Load.loadTransitive: finalizeProject(Project(id fileuploader, base: C:\Users\aldie\Desktop\FileUploader, plugins: List(<none>))) took 199.2037ms
[debug] [Loading] Done in C:\Users\aldie\Desktop\FileUploader, returning: (fileuploader)
[debug]     Load.loadUnit: loadedProjectsRaw took 3442.2405ms
[debug]     Load.loadUnit: cleanEvalClasses took 107.7256ms
[debug]   Load.loadUnit(file:/C:/Users/aldie/Desktop/FileUploader/, ...) took 17576.5475ms
[debug] Load.apply: load took 17579.5293ms
[debug] Load.apply: resolveProjects took 0.1586ms
[debug] Load.apply: finalTransforms took 49.9372ms
[debug] Load.apply: config.delegates took 0.8875ms
[debug] Load.apply: Def.make(settings)... took 249.9992ms
[debug] Load.apply: structureIndex took 55.0377ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to FileUploader (in build file:/C:/Users/aldie/Desktop/FileUploader/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51926 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51926, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FileUploader (in build file:/C:/Users/aldie/Desktop/FileUploader/)
[debug] > Exec(idea-shell, None, None)
